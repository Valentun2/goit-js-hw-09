{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,SAKtB,SAAsBC,GACpB,IAAMC,EAAQD,EAAIE,OACC,UAAfD,EAAME,KACVC,EAAaC,OAAOJ,EAAMK,OACA,SAAfL,EAAME,KACfI,EAAOF,OAAOJ,EAAMK,OAEpBE,EAAaH,OAAOJ,EAAMK,M,IAX9B,IAAIF,EAAa,EACbG,EAAO,EACPC,EAAa,EAsCjB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WAEaC,KAAKC,SAAW,GAGpCJ,EAAQ,CACNH,WACAC,UAGFG,EAAO,CACLJ,WACAC,S,GAEDA,E,IA1CTf,EAAKG,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAIkB,iBAKN,IAHE,IAAIC,EAAW,EACXC,EAAQhB,EAELiB,EAAI,EAAGA,EAAIb,EAAYa,GAAG,EAIjCZ,EAFAU,GAAY,EAEYC,GACrBE,MAAK,SAAAC,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MACjBjB,EAAA8B,OAAOC,QAAQ,qBAAoCC,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,M,IAE1DgB,OAAM,SAAAJ,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MAClBjB,EAAA8B,OAAOI,QAAQ,oBAAmCF,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,M,IAG1DS,GAAOb,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('input', handlerInput);\nlet firstDelay = 0;\nlet step = 0;\nlet maxPromise = 0;\n\nfunction handlerInput(evt) {\n  const event = evt.target;\n  if (event.name === 'delay') {\n  firstDelay = Number(event.value);\n  } else if (event.name === 'step') {\n    step = Number(event.value);\n  } else {\n    maxPromise = Number(event.value);\n  }\n}\nform.addEventListener('submit', handlerSubmit);\n\nfunction handlerSubmit(evt) {\n  evt.preventDefault()\n\n  let position = 0;\n  let delay = firstDelay\n\nfor (let i = 0; i < maxPromise; i+=1) {\n  \n  position += 1;\n    \n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n\n    delay+=step\n \n}\n \n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(()=>{\n\n      const shouldResolve = Math.random() > 0.3;\n      \n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }},delay)\n    \n  });\n}\n\n\n\n\n\n\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","evt","event","target","name","$ce04d3a99e08e73b$var$firstDelay","Number","value","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$maxPromise","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","preventDefault","position1","delay1","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.6185fd2e.js.map"}